{
  "name": "copilot-mcp",
  "author": {
    "email": "vikash@automatalabs.io",
    "name": "Vikash Loomba",
    "url": "https://automatalabs.io"
  },
  "publisher": "AutomataLabs",
  "repository": {
    "url": "https://github.com/vikashloomba/copilot-mcp",
    "type": "git"
  },
  "displayName": "Copilot MCP",
  "description": "VSCode extension that allows you to search, manage, and install open-source MCP servers",
  "version": "0.0.58",
  "icon": "logo.png",
  "engines": {
    "vscode": "^1.99.0"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/VikashLoomba"
  },
  "categories": [
    "AI",
    "Chat",
    "Machine Learning"
  ],
  "keywords": [
    "chat-participant",
    "copilot",
    "copilot-mcp",
    "chat-participant-utils",
    "dev",
    "mcp",
    "openrouter",
    "coding",
    "agent",
    "autonomous",
    "chatgpt",
    "sonnet",
    "ai",
    "llama",
    "model context protocol"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "extensionDependencies": [
    "github.copilot-chat"
  ],
  "contributes": {
    "chatParticipants": [
      {
        "id": "copilot.mcp-agent",
        "name": "mcp",
        "fullName": "MCP Finder",
        "description": "Find and install MCP servers for VSCode",
        "isSticky": true,
        "commands": [
          {
            "name": "search",
            "description": "Search for MCP servers to install",
            "disambiguation": [
              {
                "category": "mcp_search",
                "description": "The user wants to search for Model Context Protocol (MCP) servers",
                "examples": [
                  "What mcp servers are there for figma?",
                  "Can you find a browser mcp server to use?",
                  "Can find an mcp server for X?"
                ]
              }
            ]
          },
          {
            "name": "install",
            "description": "Install an MCP server",
            "disambiguation": [
              {
                "category": "mcp_install",
                "description": "The user wants to install a Model Context Protocol (MCP) server to VSCode.",
                "examples": [
                  "Can you install the firecrawl mcp server for me?",
                  "Add the github mcp server to vscode"
                ]
              }
            ]
          }
        ],
        "disambiguation": [
          {
            "category": "mcp_search",
            "description": "The user is asking about finding Model Context Protocol (MCP) servers",
            "examples": [
              "Can you help me find mcp servers for interacting with my local database?",
              "Can you help me install the mcp memory server?",
              "How do I install the firecrawl MCP server?",
              "Can you help me add the figma MCP server?",
              "What mcp servers are there for task management?"
            ]
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "copilot-mcp.helloWorld",
        "title": "Hello World"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "copilotMcpSidebar",
          "title": "Copilot MCP",
          "icon": "resources/light/server.svg"
        }
      ]
    },
    "views": {
      "copilotMcpSidebar": [
        {
          "type": "webview",
          "id": "copilotMcpView",
          "name": "Copilot MCP Panel",
          "icon": "resources/light/server.svg"
        }
      ]
    }
  },
  "scripts": {
    "install:all": "npm install && cd web && npm install --legacy-peer-deps",
    "start:webview": "cd web && npm run start",
    "build:webview": "npm --prefix web run build",
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run build:all",
    "build:all": "npm run compile && npm run build:webview",
    "package-extension": "npm run package && npx vsce package -o copilot-mcp-${npm_package_version}.vsix",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "deploy": "npx vsce publish -p $VSCE_PAT"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@ai-sdk/openai-compatible": "^0.2.14",
    "@ax-llm/ax": "^11.0.41",
    "@ax-llm/ax-ai-sdk-provider": "^11.0.41",
    "@octokit/rest": "^21.1.1",
    "@opentelemetry/api-logs": "^0.200.0",
    "@opentelemetry/exporter-logs-otlp-http": "^0.201.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.200.0",
    "@vscode/chat-extension-utils": "^0.0.0-alpha.5",
    "@vscode/extension-telemetry": "^1.0.0",
    "ai": "^4.3.15",
    "octokit": "^4.1.3",
    "vscode-messenger": "^0.5.1",
    "zod": "^3.24.4"
  }
}
